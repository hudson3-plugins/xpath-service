<!-- **************************************************************************
#
# Copyright  (c) 2004-2009 Oracle Corporation.
#
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors: 
#
#    Kohsuke Kawaguchi
#        
#
#************************************************************************** --> 


<!--
  Displays the console output
-->
<?jelly escape-by-default='true'?>
<st:compress xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form" xmlns:i="jelly:fmt">
  <l:layout title="${it.fullDisplayName} Console" norefresh="true">
    <st:include page="sidepanel.jelly" />
    <l:main-panel>
      <t:buildCaption>
        ${%Console Output}
      </t:buildCaption>
      <l:rightspace>
        <a href="consoleText">
          <img src="${imagesURL}/24x24/document.png" alt="" />${%View as plain text}
        </a>
      </l:rightspace>
      <j:set var="threshold" value="${h.getSystemProperty('hudson.consoleTailKB')?:'150'}" />
      <!-- Show at most last 150KB (can override with system property) unless consoleFull is set -->
      <j:set var="offset" value="${empty(consoleFull) ? it.logFile.length()-threshold*1024 : 0}" />
      <j:choose>
        <j:when test="${offset > 0}">
          ${%skipSome(offset/1024,"consoleFull")}
        </j:when>
        <j:otherwise>
          <j:set var="offset" value="${0}" />
        </j:otherwise>
      </j:choose>

      <j:out value="${h.generateConsoleAnnotationScriptAndStylesheet()}"/>

      <j:choose>
        <!-- Do progressive console output -->
        <j:when test="${it.isLogUpdated()}">
          <pre id="out" />
          <div id="spinner">
            <img src="${imagesURL}/spinner.gif" alt="" /> 
          </div>
         <t:progressiveText href="logText/progressiveHtml" idref="out" spinner="spinner" startOffset="${offset}" />
        </j:when>
        <!-- output is completed now. -->
        <j:otherwise>
          <pre>
            <st:getOutput var="output" />
            <j:whitespace>${it.writeLogTo(offset,output)}</j:whitespace>
          </pre>
        </j:otherwise>
      </j:choose>
    </l:main-panel>
  </l:layout>
</st:compress>
