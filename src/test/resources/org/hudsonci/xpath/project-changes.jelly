<!-- **************************************************************************
#
# Copyright  (c) 2004-2009 Oracle Corporation.
#
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors: 
#
#    Kohsuke Kawaguchi, Seiji Sogabe, Tom Huybrechts, id:cactusman
#        
#
#************************************************************************** --> 


<!--
  This view is used to render the project change list like /job/<jobname>/changes

  While this default implementation can work with any SCM,
  subclass may provide diffent implementation to present implementation-specific
  information.

  The 'builds' variable contains the collection of AbstractBuild objects
  for which the change should be displayed.
-->
<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form" xmlns:i="jelly:fmt">
  <j:choose>
    <j:when test="${empty(builds)}">
      ${%No builds.}
    </j:when>
    <j:otherwise>
      <j:set var="hadChanges" value="${false}"/>
      <j:forEach var="b" items="${builds}">
        <j:if test="${b.changeSet.iterator().hasNext()}">
          <j:set var="hadChanges" value="${true}"/>
          <h2><a href="${b.number}/changes">${b.displayName}
            (<i:formatDate value="${b.timestamp.time}" type="both" dateStyle="medium" timeStyle="medium"/>)</a></h2>

          <ol>
            <j:forEach var="c" items="${b.changeSet.iterator()}" varStatus="loop">
              <li value="${c.revision}">
                <j:out value="${c.msgAnnotated}"/>

                &#8212;

                <a href="${rootURL}/${c.author.url}/">${c.author}</a> /

                <j:set var="cslink" value="${browser.getChangeSetLink(c)}"/>
                <j:choose>
                  <j:when test="${cslink!=null}">
                    <a href="${cslink}">${browser.descriptor.displayName}</a>
                  </j:when>
                  <j:otherwise>
                    <a href="${b.number}/changes#detail${loop.index}">${%detail}</a>
                  </j:otherwise>
                </j:choose>
              </li>
            </j:forEach>
          </ol>
        </j:if>
      </j:forEach>
      <j:if test="${!hadChanges}">
        ${%No changes in any of the builds.}
      </j:if>
    </j:otherwise>
  </j:choose>
</j:jelly>
